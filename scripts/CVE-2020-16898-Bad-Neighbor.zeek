
# Detection
# Reference: https://www.mcafee.com/blogs/other-blogs/mcafee-labs/cve-2020-16898-bad-neighbor/
# We believe this vulnerability can be detected with a simple heuristic that parses all incoming 
# ICMPv6 traffic, looking for packets with an ICMPv6 Type field of 134 indicating Router Advertisement 
# and an ICMPv6 Option field of 25 â€“ indicating Recursive DNS Server (RDNSS). If this RDNSS 
# option also has a length field value that is even, the heuristic would drop or flag the associated 
# packet, as it is likely part of a Bad Neighbor exploit attempt.


module ICMP ;

export {

	redef enum Notice::Type += {
			BadNeighbor, 
	};
}

hook Notice::policy(n: Notice::Info)
{
        if ( n$note == ICMP::BadNeighbor)
	{
                add n$actions[Notice::ACTION_EMAIL];
	}
}

event icmp_router_advertisement(c: connection, info: icmp_info, cur_hop_limit: count, managed: bool, other: bool, home_agent: bool, pref: count, proxy: bool, rsv: count, router_lifetime: interval, reachable_time: interval, retrans_timer: interval, options: icmp6_nd_options )
	{ 
	if (info$itype==134) 
	{ 
		for (i in options) 
		{ 
			#local o : icmp6_nd_option = options[i];
			local o  = options[i];

			if (o$otype == 25 && o$len % 2 == 0 ) 
			{ 
				local _msg = fmt ("CVE-2020-16898: seen: option type : %s, length: %s", o$otype, o$len);  
				NOTICE([$note=ICMP::BadNeighbor, $conn=c, $src=c$id$orig_h, $msg=fmt("%s", _msg), $identifier=cat(c$id$orig_h), $suppress_for=1hrs]);
			} 
		} 
	
	} 
	} 


# icmp_router_advertisement: icmp: [v6=T, itype=134, icode=0, len=40, ttl=255], options: [[otype=3, len=4, link_address=<uninitialized>, prefix=[prefix_len=64, L_flag=F, A_flag=T, valid_lifetime=49710.0 days 6.0 hrs 28.0 mins 15.0 secs, preferred_lifetime=49710.0 days 6.0 hrs 28.0 mins 15.0 secs, prefix=2001:0:d5b:9458:ff00:0:20:100], redirect=<uninitialized>, mtu=<uninitialized>, payload=<uninitialized>]]
